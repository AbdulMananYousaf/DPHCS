@model IEnumerable<DistributedPatientHealthCareSystem.DPHCSModels.Appointment>

@{ Layout = "~/Views/Shared/_AdminLayout.cshtml";}
@inject DistributedPatientHealthCareSystem.DPHCSModels.DPHCSContext Db


<style>
    .badge-pending {
        background-color: #b94a48;
    }
    .badge-pospond {
        background-color: #f89406;
    }
    .badge-completed {
        background-color: #468847;
    }
</style>


@*<div class="container">   
    <div class="row clearfix">
        <div class="col-md-12 column">
            <table class="table table-bordered table-hover" id="tab_logic">
                <thead>
                    <tr>
                        <th class="text-center">
                            #
                        </th>
                        <th class="text-center">
                            Name
                        </th>
                        <th class="text-center">
                            Mail
                        </th>
                        <th class="text-center">
                            Mobile
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr id='addr0'>
                        <td>
                            1
                        </td>
                        <td>
                            <input type="text" name='name0' placeholder='Name' class="form-control" />
                        </td>
                        <td>
                            <input type="text" name='mail0' placeholder='Mail' class="form-control" />
                        </td>
                        <td>
                            <input type="text" name='mobile0' placeholder='Mobile' class="form-control" />
                        </td>
                    </tr>
                    <tr id='addr1'></tr>
                </tbody>
            </table>
        </div>
    </div>
    <a id="add_row" class="btn btn-default pull-left">Add Row</a><a id='delete_row' class="pull-right btn btn-default">Delete Row</a>
</div>*@


          
            @{
                
                int  Pending = Db.Appointment.Where(a => a.DoctorEmployeeId.ToString() == User.Identity.Name && a.AppointmentStatus == "Pending").Count();
                int postpond = Db.Appointment.Where(a => a.DoctorEmployeeId.ToString() == User.Identity.Name && a.AppointmentStatus == "Postpond").Count();
                int completed = Db.Appointment.Where(a => a.DoctorEmployeeId.ToString() == User.Identity.Name && a.AppointmentStatus == "Completed").Count();

      <ul class="nav nav-tabs" style="margin-top:5%">
        <li class="active col-md-4"><a class="text-center" data-toggle="tab" href="#home">Pending Appointments 
            <span class="badge badge-pending">@Pending</span></a></li>
        <li class="col-md-4"><a class="text-center" data-toggle="tab" href="#menu1">Postpond Appointments
             <span class="badge badge-pospond">@postpond</span></a></li>
        <li class="col-md-4"><a class="text-center" data-toggle="tab" href="#menu2">Completed Appointments
             <span class="badge badge-completed">@completed</span></a></li>
    </ul>
            }
    <div class="tab-content ">
            <div id="home" class="tab-pane fade in active">
               @Html.Partial("_PartialForAppointmnetList", new ViewDataDictionary(this.Vi‌​ewData) { { "Status", "Pending" } })
            </div>
            <div id="menu1" class="tab-pane fade">
                @Html.Partial("_PartialForAppointmnetList", new ViewDataDictionary(this.Vi‌​ewData) { { "Status", "Postpond" } })
            </div>
            <div id="menu2" class="tab-pane fade">
                @Html.Partial("_PartialForAppointmnetList", new ViewDataDictionary(this.Vi‌​ewData) { { "Status", "Completed" } })
            </div>
        </div>

    <style>
        .nav-tabs > li {
            padding-left: 0;
            padding-right: 0;
        }
    </style>




@section Scripts{
  
    @*<script>
        var cellText = $('#AppointmnetTable tr:last td:first').html();
      
      
    </script>*@
    <script>
        if (!!window.performance && window.performance.navigation.type == 2) {
            window.location.reload();
        }

       
    </script>


    <!--Script references. -->
  
    <!--Reference the SignalR library. -->
    <script src="~/lib/jquery.signalR.core/jquery.signalR.core.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="signalr/hubs"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">
        $(function () {
            //window.onbeforeunload = confirmExit;
            //function confirmExit() {
            //    return "You have attempted to leave this page. Are you sure?";
            //}
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            AppendCount = 1
            chat.client.broadcastMessage = function (message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page.

                $('#discussion').append('<li><strong>' + encodedName
                   + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                
                //Appointment Table update
                //check previous td no.
                prevNo = $('#AppointmnetTable tr:last td:first').html();
                if (prevNo == null) {
                    AppendCount = 0;
                   
                   
                }
                
                var tableVar = $("#AppointmnetTable").removeClass("hidden");
                $("#IsPending").remove();
                //add new tr and recived message
                $('#AppointmnetTable').append('<tr id="addr' + (AppendCount + 1) + '">' + message + '</tr>');

                //add new td for numbering
                $('#addr' + (AppendCount + 1) + '').prepend('<td>' + (parseInt(prevNo) + 1) + '</td>');
               
                AppendCount++;
             
                                    var PendingCount = parseInt($('.badge-pending').html());
                                    $('.badge-pending').html((PendingCount + 1));
                                    
                                    
                                };
                                // Get the user name and store it to prepend to messages.
                                         //$('#displayname').val(prompt('Enter your name:', ''));
                                // Set initial focus to message input box.
                                $('#message').focus();
                                $.connection.hub.qs = "UserId="+@User.Identity.Name;
                                // Start the connection.
                                $.connection.hub.start().done(function () {
                                    $('#sendmessage').click(function () {
                                        // Call the Send method on the hub.
                                        chat.server.send($('#displayname').val(), $('#message').val());
                                        // Clear text box and reset focus for next comment.
                                        $('#message').val('').focus();
                                        
                                    })
                                        .fail(function () {
                                            alert("");
                                            console.log('Could not connect');
                                        })
                                     });
                             });

      


    </script>

}
